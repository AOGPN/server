---
- include_vars: encrypted.yml

- name: Ensure git is installed
  apt: pkg=git

- name: Ensure that /var/docker exists
  file: path=/var/docker owner=root group=root state=directory

- name: Get the official discourse docker image
  command: git clone https://github.com/discourse/discourse_docker.git /var/docker creates=/var/docker/README.md

- name: Copy over app configuration
  template: src=app.yml dest=/var/docker/containers/app.yml owner=root group=root

# launcher bootstrap needs a key pair at /root/.ssh/id_rsa otherwise it waits
- name: Ensure root .ssh directory exists
  file: path=/root/.ssh state=directory
- name: Generate root keypair
  command: ssh-keygen -f /root/.ssh/id_rsa -t rsa -N '' creates=/root/.ssh/id_rsa

- name: Bootstrap discourse app
  command: ./launcher bootstrap app chdir=/var/docker creates=/var/docker/shared/standalone/log/rails/production.log
  notify: start discourse

- name: Ensure that ssl/discourse directory exist
  file: path=/etc/nginx/ssl/discourse owner=root group=root state=directory

- name: Add {{ discourse_server_name }} SSL certificate (public)
  copy: src=ssl/{{ discourse_server_name }}/ssl-unified.crt dest=/etc/nginx/ssl/discourse/cert.pem owner=root group=root mode=0600
  notify: restart nginx

- name: Add {{ discourse_server_name }} SSL certificate (private)
  copy: content={{ discourse_ssl_key }} dest=/etc/nginx/ssl/discourse/cert.key owner=root group=root mode=0600
  notify: restart nginx

- name: Generate the nginx config for the app
  template: src=discourse.nginx dest=/etc/nginx/sites-available/{{ discourse_server_name }} owner=root group=root mode=644
  notify: restart nginx

- name: Make the nginx site active
  command: ln -s /etc/nginx/sites-available/{{ discourse_server_name }} /etc/nginx/sites-enabled/{{ discourse_server_name }} creates=/etc/nginx/sites-enabled/{{ discourse_server_name }}
  notify: restart nginx
